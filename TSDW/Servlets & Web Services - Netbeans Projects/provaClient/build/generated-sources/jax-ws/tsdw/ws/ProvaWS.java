
package tsdw.ws;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "provaWS", targetNamespace = "http://ws.tsdw/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ProvaWS {


    /**
     * 
     * @param num1
     * @param num2
     * @return
     *     returns java.lang.Float
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "multiply", targetNamespace = "http://ws.tsdw/", className = "tsdw.ws.Multiply")
    @ResponseWrapper(localName = "multiplyResponse", targetNamespace = "http://ws.tsdw/", className = "tsdw.ws.MultiplyResponse")
    @Action(input = "http://ws.tsdw/provaWS/multiplyRequest", output = "http://ws.tsdw/provaWS/multiplyResponse")
    public Float multiply(
        @WebParam(name = "num1", targetNamespace = "")
        Float num1,
        @WebParam(name = "num2", targetNamespace = "")
        Float num2);

    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hello", targetNamespace = "http://ws.tsdw/", className = "tsdw.ws.Hello")
    @ResponseWrapper(localName = "helloResponse", targetNamespace = "http://ws.tsdw/", className = "tsdw.ws.HelloResponse")
    @Action(input = "http://ws.tsdw/provaWS/helloRequest", output = "http://ws.tsdw/provaWS/helloResponse")
    public String hello(
        @WebParam(name = "name", targetNamespace = "")
        String name);

}
